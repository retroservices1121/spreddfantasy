// src/components/portfolio/PortfolioOverview.tsx
'use client';

import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Trophy, TrendingUp, Target, Calendar } from 'lucide-react';

interface Portfolio {
  id: string;
  leagueId: string;
  leagueName: string;
  totalPoints: number;
  rank?: number;
  markets: Array<{
    id: string;
    title: string;
    category: string;
    points: number;
  }>;
  joinDate: string;
}

interface PortfolioOverviewProps {
  portfolios?: Portfolio[];
}

export function PortfolioOverview({ portfolios = [] }: PortfolioOverviewProps) {
  if (portfolios.length === 0) {
    return (
      <Card className="p-8 text-center bg-gradient-to-br from-dark-800 to-dark-900 border-dark-700">
        <Trophy className="w-16 h-16 text-gray-500 mx-auto mb-4" />
        <h3 className="text-xl font-semibold text-white mb-2">No Portfolios Yet</h3>
        <p className="text-gray-400">Join a league to create your first portfolio</p>
      </Card>
    );
  }

  const totalPoints = portfolios.reduce((sum, p) => sum + p.totalPoints, 0);
  const avgRank = portfolios
    .filter(p => p.rank)
    .reduce((sum, p) => sum + (p.rank || 0), 0) / portfolios.filter(p => p.rank).length;

  return (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <Card className="p-6 bg-gradient-to-br from-primary-500/10 to-primary-600/10 border-primary-500/20">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm text-gray-400 mb-1">Total Points</p>
              <p className="text-2xl font-bold text-primary-400">{totalPoints.toLocaleString()}</p>
            </div>
            <TrendingUp className="w-8 h-8 text-primary-400" />
          </div>
        </Card>

        <Card className="p-6 bg-gradient-to-br from-green-500/10 to-green-600/10 border-green-500/20">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm text-gray-400 mb-1">Active Portfolios</p>
              <p className="text-2xl font-bold text-green-400">{portfolios.length}</p>
            </div>
            <Target className="w-8 h-8 text-green-400" />
          </div>
        </Card>

        <Card className="p-6 bg-gradient-to-br from-purple-500/10 to-purple-600/10 border-purple-500/20">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm text-gray-400 mb-1">Average Rank</p>
              <p className="text-2xl font-bold text-purple-400">
                {avgRank ? `#${Math.round(avgRank)}` : 'N/A'}
              </p>
            </div>
            <Trophy className="w-8 h-8 text-purple-400" />
          </div>
        </Card>
      </div>

      <Card className="p-6 bg-gradient-to-br from-dark-800 to-dark-900 border-dark-700">
        <h3 className="text-xl font-bold text-white mb-4">Your Portfolios</h3>
        <div className="space-y-4">
          {portfolios.map((portfolio) => (
            <div key={portfolio.id} className="border border-dark-600 rounded-lg p-4">
              <div className="flex justify-between items-start mb-3">
                <div>
                  <h4 className="text-lg font-semibold text-white">{portfolio.leagueName}</h4>
                  <div className="flex items-center gap-4 text-sm text-gray-400 mt-1">
                    <span className="flex items-center gap-1">
                      <Calendar className="w-3 h-3" />
                      Joined {new Date(portfolio.joinDate).toLocaleDateString()}
                    </span>
                    <span>{portfolio.markets.length} markets</span>
                  </div>
                </div>
                <div className="text-right">
                  <div className="text-xl font-bold text-primary-400">
                    {portfolio.totalPoints} pts
                  </div>
                  {portfolio.rank && (
                    <Badge className="bg-green-500/20 text-green-400 border-green-500/50 mt-1">
                      Rank #{portfolio.rank}
                    </Badge>
                  )}
                </div>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2">
                {portfolio.markets.slice(0, 6).map((market) => (
                  <div key={market.id} className="bg-dark-700/50 rounded p-2 text-xs">
                    <div className="text-white font-medium truncate">{market.title}</div>
                    <div className="flex justify-between items-center mt-1">
                      <span className="text-gray-400 uppercase">{market.category}</span>
                      <span className="text-primary-400">{market.points}pts</span>
                    </div>
                  </div>
                ))}
                {portfolio.markets.length > 6 && (
                  <div className="bg-dark-700/50 rounded p-2 text-xs flex items-center justify-center">
                    <span className="text-gray-400">+{portfolio.markets.length - 6} more</span>
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>
      </Card>
    </div>
  );
}
